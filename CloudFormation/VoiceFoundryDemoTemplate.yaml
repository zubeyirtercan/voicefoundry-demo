AWSTemplateFormatVersion: 2010-09-09

Parameters:
  ConnectInstanceARN:
    Type: String
    Description: Please enter the full ARN of the existing Amazon Connect Instance
    AllowedPattern: ".+"
    ConstraintDescription: ConnectInstanceARN parameter cannot be blank
  CreatePhoneNumber:
    Description: If you want this template to create an AWS Connect phone number please select. If you already have a phone number, you can use it with your flow
    Type: String
    Default: No
    AllowedValues:
      - Yes
      - No

# Region mappings for artifact buckets so that the Cloudformation template
# can create lambda function on all the regions that supports Amazon Connect
Mappings:
  Fn::Transform:
    Name: AWS::Include
    Parameters:
      Location: s3://voicefoundry-artifacts/CloudFormation/Mappings.yaml

Resources:
  # This bucket will be used when deploying manually from local computer
  ArtifactsBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Join
        - "-"
        - - "voicefoundry-artifacts"
          - !Select [ 0, !Split ["-", !Select [2, !Split ["/", !Ref "AWS::StackId"]]], ]

  ConnectObjects:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: "https://voicefoundry-artifacts.s3.us-east-1.amazonaws.com/CloudFormation/ConnectObjects.yaml"
      Parameters:
        ConnectInstanceARN: !Ref ConnectInstanceARN
        CreatePhoneNumber: !Ref CreatePhoneNumber

  # DynamoDB table to hold the records of the call and generated vanity numbers
  vanityNumbersTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName: vanityNumbers
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: phoneNumber
          AttributeType: S
        - AttributeName: recordDate
          AttributeType: N
      KeySchema:
        - AttributeName: phoneNumber
          KeyType: HASH
        - AttributeName: recordDate
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 0
        WriteCapacityUnits: 0

  # The role required for the Lambda functions
  VoiceFoundryLambdaRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: voicefoundry-lambda-role
      Description: VoiceFoundry Lambda execution role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: voicefoundry-inline-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "lambda:*"
                  - "dynamodb:*"
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "*"

  # The function that generates possible vanity numbers, stores top 5 to the DynamoDB and returns top 3 to the caller flow
  # The zip file is taken from the corresponding artifact bucket in the same region
  VanityNumbersLambdaFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      FunctionName: generate-vanity-numbers-ts
      Handler: index.handler
      Role: !GetAtt VoiceFoundryLambdaRole.Arn
      Code:
        S3Bucket: !FindInMap [RegionMap, !Ref "AWS::Region", bucketname]
        S3Key: generate-vanity-numbers-ts.zip
      Runtime: nodejs14.x
      Timeout: 3

  # Permission required for Amazon Connect to run the Lambda function
  VanityNumbersConnectPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref VanityNumbersLambdaFunction
      Action: "lambda:InvokeFunction"
      Principal: "connect.amazonaws.com"

  # Puplic Lambda function that returns a web page as a response that includes last 5 calls to the service
  # The zip file is taken from the corresponding artifact bucket in the same region
  WebpageLambdaFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      FunctionName: webpage-ts
      Handler: app.lambdaHandler
      Role: !GetAtt VoiceFoundryLambdaRole.Arn
      Code:
        S3Bucket: !FindInMap [RegionMap, !Ref "AWS::Region", bucketname]
        S3Key: webpage-ts.zip
      Runtime: nodejs14.x
      Timeout: 3

  # Adding a URL to the Lambda function
  WebpageFunctionURL:
    Type: AWS::Lambda::Url
    Properties:
      AuthType: NONE
      TargetFunctionArn: !GetAtt WebpageLambdaFunction.Arn

  # Permissions to reach the URL from public
  LambdaFunctionURLPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref WebpageLambdaFunction
      FunctionUrlAuthType: "NONE"
      Action: lambda:InvokeFunctionUrl
      Principal: "*"

# Output parameters
Outputs:
  WebpageURL:
    Description: The URL of the dynamic webpage to display last 5 calls to the flow
    Value: !GetAtt WebpageFunctionURL.FunctionUrl
  LambdaARN:
    Description: The ARN of the Lambda function that is going to be used in ContactFlow
    Value: !GetAtt VanityNumbersLambdaFunction.Arn
  ArtifactsBucket:
    Description: If you want to deploy Lambda functions on your own. You can use this bucket in package.json files
    Value: !Ref ArtifactsBucket
